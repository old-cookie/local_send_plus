import 'package:flutter/material.dart';
import 'package:flutter_gemma/core/chat.dart';
import 'package:flutter_gemma/flutter_gemma.dart';
import 'chat_input_field.dart';
import 'chat_message.dart';
import 'gemma_input_field.dart';

/// A widget that displays a list of chat messages and input fields.
class ChatListWidget extends StatelessWidget {
  /// Creates a [ChatListWidget].
  ///
  /// Requires [messages], [gemmaHandler], [humanHandler], and [errorHandler].
  /// Optionally takes a [chat] instance and a [key].
  const ChatListWidget({
    required this.messages,
    required this.gemmaHandler,
    required this.humanHandler,
    required this.errorHandler,
    this.chat,
    super.key,
  });

  /// The current chat session, if any.
  final InferenceChat? chat;

  /// The list of messages to display in the chat.
  final List<Message> messages;

  /// Callback function for handling messages generated by Gemma.
  final ValueChanged<Message> gemmaHandler;

  /// Callback function for handling messages submitted by the user.
  final ValueChanged<String> humanHandler;

  /// Callback function for handling errors during chat processing.
  final ValueChanged<String> errorHandler;
  @override
  Widget build(BuildContext context) {
    return ListView.builder(
      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 8.0),
      reverse: true,
      itemCount: messages.length + 2,
      itemBuilder: (context, index) {
        if (index == 0) {
          if (messages.isNotEmpty && messages.last.isUser) {
            return GemmaInputField(chat: chat, messages: messages, streamHandler: gemmaHandler, errorHandler: errorHandler);
          }
          if (messages.isEmpty || !messages.last.isUser) {
            return ChatInputField(handleSubmitted: humanHandler);
          }
        } else if (index == 1) {
          return const Divider(height: 1.0);
        } else {
          final message = messages.reversed.toList()[index - 2];
          return ChatMessageWidget(message: message);
        }
        return null;
      },
    );
  }
}
